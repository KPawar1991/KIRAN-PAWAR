--CREATING DATABASE FOR SMC TAXATION SYSTEM AND SCHEMA SEPERATELY FOR THE DATABASE AND TABLE


CREATE DATABASE SMC_TAX;
USE DATABASE SMC_TAX;
CREATE SCHEMA SMC_TAX_SC;
USE SCHEMA SMC_TAX_SC;

--NOW CREATING TABLE WHICH IS MATCH OUR CSV FILE 

CREATE OR REPLACE TABLE VEHICLE_TAX (
    CityName STRING,
    VehicleTypeId INT,
    Description STRING,
    Year INT,
    Month INT,
    Count INT,
    Amount DECIMAL(10,2)
);

--HERE IS IMPORTANT ROLE TAKLES PLACE TO CREATE STORAGE INTEGRATION WHERE I AM GOING TO USE STORAGE INTEGRATION AND USING S3 BUCKET FROM AWS PLATFORM TO LOAD DATA INTO STAGE. IT IS CONNECTION CREATION BETWEEN S3 AND SNOWFLAKE (IAM ROLE) 

CREATE OR REPLACE STORAGE INTEGRATION smc_s3_integration
TYPE = EXTERNAL_STAGE
STORAGE_PROVIDER = 'S3'
ENABLED = TRUE
STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::565393048886:role/SMC_TAXATION_CHECK'
STORAGE_ALLOWED_LOCATIONS = ('s3://testingbucketforsnowflake/');

--DESCRIBE YOUR INTEGRATION AND TAKE USABLE DETILAS LIKE ARN FOR TRUST POLICY IN I AM ROLE


DESC INTEGRATION smc_s3_integration;




-- NOW CREATE STAGE FOR TO GERT DATA FROM OUR S3 BUCKET WHERE ALL THE DETAILS SHOWN BELOW

CREATE OR REPLACE STAGE smc_stage
STORAGE_INTEGRATION = smc_s3_integration
URL = 's3://testingbucketforsnowflake/'
FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1);

-- TO CHECK THE FILES AVAILABLE IN OUR BUCKET USE THIS COMMAND 
LIST @smc_stage;

--TO DESCRIBE STSTAGES

DESC STAGE smc_stage;

-- SELECT THE TARGET FILE AVAILABLE ON S3 BUCKET AND COPY DATA INTO OUR TABLE FROM THAT CSV FILE 
-- WHEN WE ARE USING THE SNOWFLAKE AND CONNECTION BETWEEN THE S3 AND SNOWFLAKE IMPORTANT THING IS WE HAVE TO USE THE FOLDER THAT WHERE CONTINUESLY CLIENT UPOLODING THE DATA AND WHEN THE NEW DATA ARRIVE IT WILL ADDED IN OUR TABLES


COPY INTO VEHICLE_TAX
FROM @smc_stage/SMCVEHICLETAXDETAILS.csv
FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1)
ON_ERROR = CONTINUE;

-- TO SEE THE TABLE DATA 

SELECT * FROM VEHICLE_TAX;

-- Data Cleaning IN SNOWFLAKE 

UPDATE VEHICLE_TAX
SET Description = TRIM(Description)
WHERE Description IS NOT NULL;

--Aggregation -- HERE THE DATA IS AGGREGATED

CREATE OR REPLACE TABLE VEHICLE_TAX_SUMMARY AS
SELECT CityName, Year, SUM(Amount) AS TotalTaxCollected
FROM VEHICLE_TAX
GROUP BY CityName, Year;

-- FOR CONTINUOUS DATA INGESTION WE ARE CREATING PROCEDURE WHERE WE DONT NEED TO WRITE QUERIES AGAIN AND AGAIN TO INSERT DATA FROM S3 BUCKET


CREATE OR REPLACE PROCEDURE LOAD_VEHICLE_TAX()
RETURNS STRING
AS
$$
    BEGIN
        COPY INTO VEHICLE_TAX
        FROM @smc_stage/SMC_VEHICLE_TAX_DETAILS.csv
        FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1);
    END;
$$;

--TO CHECK THE DETAILS FROM TABLE

SELECT DISTINCT (YEAR), SUM(Amount) AS TotalTax 
FROM VEHICLE_TAX 
GROUP BY Year
ORDER BY YEAR ASC;


SELECT Description, SUM(Amount) AS TotalTax 
FROM VEHICLE_TAX 
GROUP BY Description 
ORDER BY TotalTax DESC LIMIT 5;

--AUTOMATION PROCESS  -- WE HAVE CREATED PIPE HERE. WHEN THE DATA IS INSERTED BY CLIENT IN S3 BUCLKET THE DATA IS INSERTED INTO STAGE AND THEN INTO TABLE AUTOMATICALLY FOR THIS PROCESS WE HAVE CREATED PIPE AND NOW THE PIPE WORK AS DATA INGESTION



CREATE OR REPLACE PIPE smc_vehicle_tax_pipe
AUTO_INGEST = TRUE
AS
COPY INTO VEHICLE_TAX
FROM @smc_stage/SMCVEHICLETAXDETAILS.csv
FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER = 1);


ALTER PIPE smc_vehicle_tax_pipe REFRESH;

-- TO CHECK THE DATA WE HAVE CREATED STREAM


CREATE OR REPLACE STREAM vehicle_tax_stream 
ON TABLE VEHICLE_TAX;

SELECT * FROM VEHICLE_TAX_STREAM;

-- NOW WE  HAVE CREATED TASK HERE 



CREATE OR REPLACE TASK process_vehicle_tax_summary
WAREHOUSE = COMPUTE_WH
SCHEDULE = '1 HOUR'
WHEN SYSTEM$STREAM_HAS_DATA('vehicle_tax_stream')
AS
MERGE INTO VEHICLE_TAX_SUMMARY t
USING (
    SELECT CityName, Year, SUM(Amount) AS TotalTax
    FROM VEHICLE_TAX_STREAM
    GROUP BY CityName, Year
) s
ON t.CityName = s.CityName AND t.Year = s.Year
WHEN MATCHED THEN 
    UPDATE SET t.TotalTaxCollected = s.TotalTax
WHEN NOT MATCHED THEN 
    INSERT (CityName, Year, TotalTaxCollected) VALUES (s.CityName, s.Year, s.TotalTax);


SHOW TASKS;

ALTER TASK process_vehicle_tax_summary RESUME;


